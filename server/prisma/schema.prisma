// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  access_code String
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now()) @updatedAt

  Inspection Inspection[]
}

model Inspection {
  id                String   @id @default(uuid())
  user_id           String
  name              String
  responsible       String
  type              Type
  recording_url     String?
  participants      String?
  responsible_email String
  status            Status   @default(uninitiated)
  created_at        DateTime @default(now())
  updated_at        DateTime @default(now()) @updatedAt

  User     User       @relation(fields: [user_id], references: [id], onDelete: Cascade)
  Document Document[]
  Template Template?
}

enum Type {
  privacyRequirement
  userStory
}

enum Status {
  uninitiated
  initiated
  concluded
}

model Document {
  id            String   @id @default(uuid())
  inspection_id String
  name          String
  type          String
  url           String
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now()) @updatedAt

  Inspection Inspection @relation(fields: [inspection_id], references: [id], onDelete: Cascade)
}

model Template {
  id            String   @id @default(uuid())
  inspection_id String   @unique
  name          String
  description   String
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now()) @updatedAt

  Inspection Inspection @relation(fields: [inspection_id], references: [id], onDelete: Cascade)

  Item Item[]
}

model Item {
  id           String   @id @default(uuid())
  template_id  String
  item_index   String
  situation    String?
  description  String
  observations String
  category     String?
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now()) @updatedAt

  Template Template @relation(fields: [template_id], references: [id], onDelete: Cascade)

  Trail Trail[]
}

model Trail {
  id          String   @id @default(uuid())
  item_id     String
  page_number Int?
  text        String
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now()) @updatedAt

  Item Item @relation(fields: [item_id], references: [id], onDelete: Cascade)
}
